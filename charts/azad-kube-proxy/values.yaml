application:
  port: 8080
  scheme: HTTP # HTTP or HTTPS

# Using environment variables by default
podArgs: {}

# Go here to find all environment variables: pkg/config/config.go Flags()
podEnv:
  - name: CLIENT_ID
    valueFrom:
      secretKeyRef:
        name: azad-kube-proxy
        key: CLIENT_ID
  - name: CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: azad-kube-proxy
        key: CLIENT_SECRET
  - name: TENANT_ID
    valueFrom:
      secretKeyRef:
        name: azad-kube-proxy
        key: TENANT_ID
  - name: AZURE_AD_GROUP_PREFIX
    value: ""
  # Use these environment variables to enable redis (needed together with the flags)
  # - name: CACHE_ENGINE
  #   value: REDIS
  # - name: REDIS_URI
  #   value: redis://redis:6379/0

secret:
  create: false
  name: azad-kube-proxy
  CLIENT_ID: ""
  CLIENT_SECRET: ""
  TENANT_ID: ""

replicaCount: 1

image:
  repository: ghcr.io/xenitab/azad-kube-proxy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "azad-kube-proxy"

serviceAccount:
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "azad-kube-proxy"

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

podVolumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret

podVolumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true